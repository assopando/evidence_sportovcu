<?php 

use LdapRecord\Query\Builder;
use LdapRecord\Models\ActiveDirectory\User;
use LdapRecord\Models\Entry;
use LdapRecord\Container;
use LdapRecord\Connection;
use LdapRecord\Models\ActiveDirectory\Group;
use Dotenv\Dotenv;

    $connection = new Connection([
        'hosts' => ['192.168.1.31'],
        'username' => 's.fabisz.st@testovaci.local',
        'password' => '',
        'base_dn' => 'dc=testovaci,dc=local',
        'port' => 389,
    ]);

  /*  $connection = new Connection([
        'hosts' => ['msad19.spseiostrava.cz'],
        'username' => 's.fabisz.st@spseiostrava.cz',
        'password' => '11082004Sf',
        'base_dn' => 'dc=msad19,dc=spseiostrava,dc=cz',
        'port' => 389,
    ]);*/
    
    $connection->connect();
    Container::addConnection($connection, 'ldap'); // Přidejte připojení do kontejneru s názvem 'ldap'

    try {
        $connection->connect();
    
        echo "Successfully connected!";
        echo "<br>";
        
    } catch (\LdapRecord\Auth\BindException $e) {
        $error = $e->getDetailedError();
    
        echo $error->getErrorCode();
        echo $error->getErrorMessage();
        echo $error->getDiagnosticMessage();
    }


    
    
   

    
    


    // ...
    $modelyUzivatelu = new ModelyUzivatel;

        // Sestavte dotaz pro získání jmen a příjmení všech uživatelů v organizační jednotce SpseiUsers
    /*    $users = User::on('ldap')->select('givenName', 'sn','mail')->in('OU=SpseiUsers,dc=testovaci,dc=local')->get();
   


        $uspesneAktualizovaneEmaily = 0;
        $neuspesneAktualizovaneEmaily = 0;
        $nenalezenyUzivatel=0;

foreach ($users as $user) {
    $ldapEmail = $user->mail[0];

    $existingUser = Db::dotazJeden("SELECT * FROM uzivatel WHERE jmeno = ? AND prijmeni = ?", [$user->givenName[0], $user->sn[0]]);

    if ($existingUser) {
        $hodnoty = [
            "id_uziv" => $existingUser["id_uziv"],
            "email" => $ldapEmail,
        ];

     //   $zmenaVDb = $modelyUzivatelu->zmenUzivatele($hodnoty);

    
    } else {
        $nenalezenyUzivatel++;
       // echo "Uživatel " . $user->givenName[0] ." ". $user->sn[0] . " nenalezen v databázi.<br>";
    }
}*/

//echo "Počet úspěšně aktualizovaných e-mailů: $uspesneAktualizovaneEmaily<br>";
//echo "Počet neúspěšně aktualizovaných e-mailů: $neuspesneAktualizovaneEmaily<br>";
//echo "Počet nenalezených uživatelů :  $nenalezenyUzivatel<br>";
     ?>

        <h2>Přihlášení uživatele</h2>
<form method="post">
    <div>
        <label for="email">E-mail</label>
        <input type="email" name="email" id="email" required>
    </div>
    <div>
        <label for="heslo">Heslo</label>
        <input type="password" name="heslo" id="heslo" required>
    </div>
    <input type="submit" value="Přihlásit se">
</form>

<?php 




 if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    // Retrieve submitted email and password
    $submittedEmail = $_POST['email'];
    $submittedPassword = $_POST['heslo'];
    $_SESSION['loggedIn'] = true; 
    
    $_SESSION['email'] =  $submittedEmail;
   // var_dump($_SESSION['email']);

    // Authenticate the user against LDAP
    try {
        // Find the user in LDAP by email
        $user = User::on('ldap')->where('mail', '=', $submittedEmail)->firstOrFail();

        // Attempt authentication
        
        if ($connection->auth()->attempt($user->getDn(), $submittedPassword)) {
            // User has been successfully authenticated.

            foreach ($this->data['uzivatel'] as $uziv) {
                if ($uziv["email"] == $submittedEmail) {
                    $_SESSION["opravneni"] = $uziv["opravneni"];
                }
            }


           header("Refresh: 0");
           if (strpos($submittedEmail, '.st') === false) {
            // Call the method to add a teacher from ModelyUzivatel
           
            $id= $modelyUzivatelu->vratPosledniIdUcitele();

            foreach ($modelyUzivatelu->vratInfoVsechUcitelu() as $ucitel) {
                // Získání e-mailu učitele
                $ucitelEmail = $ucitel['email']; // Předpokládejme, že e-mail je uložený ve formě asociativního pole pod klíčem 'email'
            
                // Kontrola, zda se e-mail učitele rovná e-mailu odeslanému ve formuláři
                if ($ucitelEmail !== $submittedEmail) {
                    // E-mail učitele se neshoduje s e-mailem z formuláře, zavolejte metodu pro přidání učitele
                     $id+=1;
            $uzivatel = [
                'id_uziv' => $id,
              //  'email' => $submittedEmail,
                'opravneni' => 1,
                'jmeno' => $user->givenName[0] ,
                'prijmeni' =>$user->sn[0],
            ];
            $pridaniUc=$modelyUzivatelu->pridejUcitele($uzivatel);
            
            if($pridaniUc){
                $this->pridejZpravu("Učitel přidán do databáze."); 
            }
            else{
                $this->pridejZpravu("Učitel nebyl přidán do databáze."); 
            }

                }
            }







           
        }
        } else {
            // Check if the email is incorrect
            $userByEmail = User::on('ldap')->where('mail', '=', $submittedEmail)->first();
            if ($userByEmail) {
                // Email is correct, but password is incorrect
                echo "Incorrect password";
            } 
        }
    } catch (\Exception $e) {
        //echo "An error occurred: " . $e->getMessage();
        echo "Špatně zadaný email";
    }

// ...

}




   


  

    